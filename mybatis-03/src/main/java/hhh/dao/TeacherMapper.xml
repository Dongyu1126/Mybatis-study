<?xml version="1.0" encoding="UTF8" ?>
<!--这个程序配置文件必须要符合规范，否则必报错-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hhh.dao.TeacherMapper">

    <select id="getTeacher" resultType="Teacher"> <!--id="getTeacher" 是TeacherMapper里的名字 resultType="Teacher" 这是对应是实体类-->
        select * from teacher;
    </select>

    <!--*******************按照结果嵌套查询****************************-->
    <select id="getTeacher2" resultMap="TeacherStudent">
        select s.id sid,s.name sname,t.name tname,t.id tid
        from student s,teacher t
        where s.tid=t.id and t.id = #{tid};
    </select>

    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
        <!--复杂属性，我们需要单独处理 对象：association 集合：collection
        javaType=""指定属性的类型！
        集合中的泛型信息，我们使用ofType获取
        -->
        <!--Student对应实体类
          这里是一对多，多的要服从一，即学生要服从老师类-->
        <collection property="student" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>

    </resultMap>
    
    <!--============按照查询嵌套处理===================-->

    <select id="getTeacher3" resultMap="TeacherStudent">
        select * from mybatis.teacher where id = #{tid}
    </select>

    <!--这里是一对多，多的要服从一，即学生要服从老师类-->
    <resultMap id="TeacherStudent" type="Teacher">
        <collection property="student" javaType="ArrayList" ofType="Student" select="getStudentByTeacherId" column="id"/>
        <!--javaType="ArrayList" 不写也行-->
    </resultMap>
    
    <select id="getStudentByTeacherId" resultType="Student">
        select * from mybatis.student where tid = #{tid}
    </select>

</mapper>
