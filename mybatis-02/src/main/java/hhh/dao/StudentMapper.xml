<?xml version="1.0" encoding="UTF8" ?>
<!--这个程序配置文件必须要符合规范，否则必报错-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hhh.dao.StudentMapper">

<!--*************查询所有的学生信息，以及对应的老师的信息 方法1:按照查询嵌套处理（类似子查询）*****************-->
    <select id="getStudent" resultMap="StudentTeacher">
        select * from student ;
    </select>

    <resultMap id="StudentTeacher" type="Student">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <!--其中property为实体类里面的名字，column为数据库里名字的别名-->
        <!--复杂的属性嵌套，我们需要单独处理
           对象：association  集合：collection-->
        <association property="teacher" column="tid" javaType="Teacher" select="getTeacher"/>
        <!--这里的tid是给teacher数据库里的id起的别名
          这里是多对一，一要服从多，即老师要去服从学生类-->
    </resultMap>

    <select id="getTeacher" resultType="Teacher">
        select * from teacher where id=#{id}
    </select>

    <!--***************查询所有的学生信息，以及对应的老师的信息 方法2:按照结果嵌套处理（类似联表查询）******************-->
    <select id="getStudent2" resultMap="StudentTeacher2">
        select s.id sid,s.name sname,t.name tname,t.id tid
        from student s,teacher t
        where s.tid=t.id
        <!--因为这里没有查询teacher库里的id的操作，所以最后的结果id被放弃，系统自动赋值id=0  这里加了一个tid的检测-->
    </select>
    <resultMap id="StudentTeacher2" type="Student">
        <result property="id" column="sid"/>
        <result property="name" column="sname"/>
        <association property="teacher" javaType="Teacher">
            <result property="name" column="tname"/>
            <result property="id" column="tid"/>
        </association>
    </resultMap>

</mapper>